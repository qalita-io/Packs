name: CI Pipeline

on: [push, pull_request]

jobs:
  pylint_check:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install pylint
        run: pip install pylint
      - name: Run pylint
        run: pylint --fail-under=6 **/**/*.py

  safety_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install safety
        run: pip install poetry safety
      - name: Run safety check
        run: safety check

  secrets_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install truffleHog
        run: pip install truffleHog
      - name: Run truffleHog
        run: trufflehog --regex --entropy=False .

  bandit_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install bandit
        run: pip install bandit
      - name: Run bandit
        run: bandit -lll -r .

  # pytest:
  #   runs-on: ubuntu-latest
  #   needs: [bandit_check, secrets_scan, safety_check]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'
  #     - name: Install dependencies
  #       run: |
  #         pip install poetry pytest
  #         poetry install --no-root
  #     - name: Run pytest
  #       run: poetry run pytest tests/
